import java.lang.annotation.Target;
import java.util.*;





public class Q000_A_Contest 
{	
	private int sum = 0;
	
	public int subsetXORSum(int[] nums) 
    {
        if (nums == null || nums.length == 0)
        {
            return 0;
        }
        
        for (int i = 0; i < nums.length; i++)
        {
        	backtrack(nums, i, nums[i]);
        }
        
        return sum;
    }
	
	private void backtrack(int[] nums, int start, int xor)
	{
		sum += xor;
		
		for (int i = start+1; i < nums.length; i++)
		{
			backtrack(nums, i, xor ^ nums[i]);
		}
	}
	
	
	
	public int minSwaps(String s) 
	{
		if (s == null || s.length() == 0)
		{
			return 0;
		}
		
		int[] counts = new int[2];
		int change1 = 0, change2 = 0;
		
		for (int i = 0; i < s.length(); i++)
		{
			counts[s.charAt(i)-'0']++;
			char target1 = (i % 2 == 0) ? '1' : '0';
			char target2 = (i % 2 == 0) ? '0' : '1';
			change1 += (s.charAt(i) != target1) ? 1 : 0;
			change2 += (s.charAt(i) != target2) ? 1 : 0;
		}
		
		if (Math.abs(counts[0] - counts[1]) > 1)
		{
			return -1;
		}
		else
		{
			return Math.min(change1, change2);
		}
	}
	
	
	
    
    public static void main(String[] args)
    {
    	Q000_A_Contest test = new Q000_A_Contest();
    	
    	/****************************************************/
 
    	int[] nums1 = {1, 3};
    	int[] nums2 = {5, 1, 6};
    	int[] nums3 = {3,4,5,6,7,8};
    	
    	// System.out.println(test.subsetXORSum(nums1));
    	// System.out.println(test.subsetXORSum(nums2));
    	// System.out.println(test.subsetXORSum(nums3));
    	
    	String s1 = "111000";
    	
    	System.out.println(test.minSwaps(s1));
    }
}
