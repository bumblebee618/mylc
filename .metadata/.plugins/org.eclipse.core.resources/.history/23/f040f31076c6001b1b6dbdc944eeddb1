import java.util.*;





public class Q000_A_Contest 
{	  
	public boolean findRotation(int[][] mat, int[][] target) 
    {
        if (mat == null || mat.length == 0 || mat[0].length == 0)
        {
            return false;
        }
        else if (target == null || target.length == 0 || target[0].length == 0)
        {
            return false;
        }
        else if (mat.length != target.length)
        {
            return false;
        }
        
        int n = mat.length;
        int[] status1 = new int[n];
        int[] status2 = new int[n];
        
        for (int row = 0; row < n; row++)
        {
        	status1[row] = 0;
        	status2[row] = 0;
        	
        	for (int col = 0; col < n; col++)
        	{
        		if (mat[row][col] == 1)
        		{
        			status1[row] |= (1 << col);
        		}
        		
        		if (target[row][col] == 1)
        		{
        			status2[row] |= (1 << col);
        		}
        	}
        }
        
        if (isEqual(status1, status2))
        {
        	return true;
        }
        
        int[] status3 = new int[n];
        
        for (int col = n-1; col >= 0; col--)
        {
        	status3[n-1-col] = 0;
        	
        	for (int row = 0; row < n; row++)
        	{
        		if (target[row][col] == 1)
        		{
        			status3[n-1-col] |= (1 << row);
        		}
        	}
        }
        
        if (isEqual(status1, status3))
        {
        	return true;
        }
        
        int[] status4 = new int[n];
        
        for (int row = n-1; row >= 0; row--)
        {
        	status4[n-1-row] = 0;
        	
        	for (int col = n-1; col >= 0; col--)
        	{
        		if (target[row][col] == 1)
        		{
        			status4[n-1-row] |= (1 << (n-1-col));
        		}
        	}
        }
        
        if (isEqual(status1, status4))
        {
        	return true;
        }
        
        int[] status5 = new int[n];
        
        for (int col = 0; col < n; col++)
        {
        	status5[col] = 0;
        	
        	for (int row = n-1; row >= 0; row--)
        	{
        		if (target[row][col] == 1)
        		{
        			status5[col] |= (1 << (n-1-row));
        		}
        	}
        }
        
        if (isEqual(status1, status5))
        {
        	return true;
        }
        
        return false;
    }		
	
	private boolean isEqual(int[] status1, int[] status2)
	{
		for (int i = 0; i < status1.length; i++)
		{
			if (status1[i] != status2[i])
			{
				return false;
			}
		}
		
		return true;
	}
									
	
    public static void main(String[] args)
    {
    	Q000_A_Contest test = new Q000_A_Contest();
    	
    	/****************************************************/
    	
    	int[][] mat1 = {{0,1},{1,0}}, target1 = {{1,0},{0,1}};
    	int[][] mat2 = {{0,0},{0,1}}, target2 = {{0,0},{1,0}};
    	int[][] mat3 = {{0,0,0},{0,1,0}, {1,1,1}}, target3 = {{1,1,1},{0,1,0}, {0,0,0}};
    	int[][] mat4 = {
    			{0,0,0},
    			{0,0,1},
    			{0,0,1}}, target4 = {
    					{0,0,0},
    					{0,0,1}, 
    					{0,0,1}};
    	
    	System.out.println(test.findRotation(mat1, target1));
    	System.out.println(test.findRotation(mat2, target2));
    	System.out.println(test.findRotation(mat3, target3));
    	System.out.println(test.findRotation(mat4, target4));
    }
}
