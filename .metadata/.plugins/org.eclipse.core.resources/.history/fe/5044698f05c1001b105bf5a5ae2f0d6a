import java.util.*;





public class Q000_A_Contest 
{	  
			Node node = heap.poll();
				result[index] = node.id;
				buff.offer(new Node(curTime + tasks[index], node.id, node.weight));
				
				if (curTime == index)
				{
					curTime++;
				}
				
				index++;
			}
			else
			{
				curTime = buff.peek().freeTime;
			}
		}
		
		return result;
    }
	
	class Node
	{
		public int freeTime;
		public int id;
		public int weight;
		
		public Node (int f, int i, int w)
		{
			freeTime = f;
			id = i;
			weight = w;
		}
	}
	
									
									
	
    public static void main(String[] args)
    {
    	Q000_A_Contest test = new Q000_A_Contest();
    	
    	/****************************************************/
    	/***
    	int[] servers1 = new int[] {3,3,2};
    	int[] tasks1 = new int[] {1,2,3,2,1,2};
    	int[] result1 = test.assignTasks(servers1, tasks1);
    	for (int result : result1)
    	{
    		System.out.print(result + ", ");
    	}
    	System.out.println();
    	
    	int[] servers2 = new int[] {5,1,4,3,2};
    	int[] tasks2 = new int[] {2,1,2,4,5,2,1};
    	int[] result2 = test.assignTasks(servers2, tasks2);
    	for (int result : result2)
    	{
    		System.out.print(result + ", ");
    	}
    	System.out.println();
    	***/
    	
    	int[] servers3 = new int[] {10,63,95,16,85,57,83,95,6,29,71};
    	int[] tasks3 = new int[] {70,31,83,15,32,67,98,65,56,48,38,90,5};
    	int[] result3 = test.assignTasks(servers3, tasks3);
    	for (int result : result3)
    	{
    		System.out.print(result + ", ");
    	}
    	System.out.println();
    }
}
