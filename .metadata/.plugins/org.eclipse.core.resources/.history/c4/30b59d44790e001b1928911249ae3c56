import java.util.HashMap;
import java.util.Map;
import java.util.Random;

public class Poollmpl 
{
	private String poolId;
	private double temperature;
	private Map<String, Fish> fishPool;
	private Random rand;
	private int fishNum = 5;
	
	public Poollmpl(String poolId)
	{
		this.poolId = poolId;
		rand = new Random();
		fishPool = new HashMap<>();
		temperature = 10;
		init();
	}
	
	public void feedFish(int foodCount)
	{
		if (foodCount < 0)
		{
			return;
		}
		
		while (foodCount > 0)
		{
			int feedCount = rand.nextInt(foodCount+1);
			int fishId = pickupFish();
			int actualEatNum = fishPool.get(fishId).feed(feedCount);
			foodCount -= actualEatNum;
		}
	}
	
	public boolean isFishHealthy(String fishId)
	{
		if (!fishPool.containsKey(fishId))
		{
			return false;
		}
		
		return fishPool.get(fishId).isHealthy();
	}
	
	public String checkFishsStatus()
	{
		StringBuilder builder = new StringBuilder();
		
		for (String fishId : fishPool.keySet())
		{
			builder.append(fishId).append(":").append(fishPool.get(fishId)).append("\n");
		}
		
		return builder.toString();
	}
	
	public String getPoolId() 
	{
		return poolId;
	}
	
	public double getTemperature() 
	{
		return temperature;
	}
	
	private void init()
	{
		for (int i = 0; i < fishNum; i++)
		{
			String fishId = Integer.toString(i);
			fishPool.put(fishId, new GoldFish(fishId));
		}
	}
	
	private int pickupFish()
	{
		return rand.nextInt(fishNum+1);
	}
}
