/***
 * 
 * @author jackie
 * 
 * Given a string s consisting only of letters 'a' and 'b'. In a single step you can remove one palindromic subsequence from s.

Return the minimum number of steps to make the given string empty.

A string is a subsequence of a given string, if it is generated by deleting some characters of a given string without changing its order.

A string is called palindrome if is one that reads the same backward as well as forward.

 

Example 1:

Input: s = "ababa"
Output: 1
Explanation: String is already palindrome
Example 2:

Input: s = "abb"
Output: 2
Explanation: "abb" -> "bb" -> "". 
Remove palindromic subsequence "a" then "bb".
Example 3:

Input: s = "baabb"
Output: 2
Explanation: "baabb" -> "b" -> "". 
Remove palindromic subsequence "baab" then "b".
Example 4:

Input: s = ""
Output: 0
 

Constraints:

0 <= s.length <= 1000
s only consists of letters 'a' and 'b'
 */

public class Q1332_Remove_Palindromic_Subsequences 
{
	public int removePalindromeSub(String s) 
    {
        if (s == null || s.length() == 0)
        {
            return 0;
        }
        
        int step = 0;
        
        System.out.println("start");
        
        while (s.length() > 0)
        {
            step++;
            s = findNextStr(s, 0, s.length()-1);
            
            System.out.println(s);
        }
        
        return step;
    }
    
    private String findNextStr(String s, int left, int right)
    {
        if (left >= right)
        {
            return "";
        }
        
        if (s.charAt(left) == s.charAt(right))
        {
            return findNextStr(s, left+1, right-1);
        }
        else
        {
            String remain1 = findNextStr(s, left+1, right);
            String remain2 = findNextStr(s, left, right-1);
            return remain1.length() < remain2.length() ? s.charAt(left) + remain1 : remain2 + s.charAt(right);
        }
    }
    
    
    
    
    public static void main(String[] args)
    {
    	Q1332_Remove_Palindromic_Subsequences test = new Q1332_Remove_Palindromic_Subsequences();
    	String s = "bbaabaaa";
    	
    	System.out.println(test.removePalindromeSub(s));
    }
}
