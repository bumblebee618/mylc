import javax.xml.soap.Node;

public class Q_quad_tree {
	public QuadTree buildQuadTree(int[][] matrix) {
		if (matrix == null || matrix.length == 0 || matrix[0].length == 0) {
			return null;
		}
		
		
	}
	
	private QuadTree helper(int[][] matrix, int rowStart, int rowEnd, int colStart, int colEnd) {
		if (rowStart > rowEnd || colStart > colEnd) {
			return null;
		} 
		
		QuadTree node = new QuadTree();
		
		if (rowStart == rowEnd && colStart == colEnd) {		
			node.value = matrix[rowStart][rowEnd];
			node.isLeaf = true;
			node.leftTop = node.rightTop = node.leftBottom = node.rightBottom = null;
			return node;
		} else {
			int rowMid = (rowEnd - rowStart) / 2;
			int colMid = (colEnd - colStart) / 2;
			node.leftTop = helper(matrix, rowStart, rowMid, colStart, colMid);
			node.leftBottom = helper(matrix, rowMid+1, rowEnd, colStart, colMid);
			node.rightTop = helper(matrix, rowStart, rowMid, colMid+1, colEnd);
			node.rightBottom = helper(matrix, rowMid+1, rowEnd, colMid+1, colEnd);
		}
	}
}

class QuadTree {
	public boolean isLeaf;
	public int value;
	public QuadTree leftTop, rightTop, leftBottom, rightBottom;
}
