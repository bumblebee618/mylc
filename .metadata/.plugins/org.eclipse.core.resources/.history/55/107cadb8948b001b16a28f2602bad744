import java.util.*;

public class Q000_A_Contest 
{
	static int[] demandingMoney(int[] moneys, int[][] roads) 
	{
		if (moneys == null || moneys.length == 0 || roads == null || roads.length == 0)
		{
			return new int[] {0, 0};
		}
		
		Map<String, Integer> memo = new HashMap<>();
		int n = moneys.length;
		Set<String> solutions = new HashSet<>();
		
		Set<Integer>[] graph = new Set[n+1];
		for (int i = 1; i <= n; i++)
		{
			graph[i] = new HashSet<>();
		}
		
		for (int[] road : roads)
		{
			graph[road[0]].add(road[1]);
			graph[road[1]].add(road[0]);
		}
		
		char[] status = new char[n+1];
		Arrays.fill(status, ' ');
		int maxMoney = search(memo, graph, solutions, moneys, status);
		return new int[] {maxMoney, solutions.size()};
	}
	
	private static int search(
			Map<String, Integer> memo, 
			Set<Integer>[] graph,
			Set<String> solutions,
			int[] moneys,
			char[] status)
	{
		String key = new String(status);
		
		if (memo.containsKey(key))
		{
			return memo.get(key);
		}
		
		int money = 0;
		boolean hasNext = false;
		
		for (int i = 1; i < status.length; i++)
		{
			if (status[i] == ' ')
			{
				char[] nextStatus = Arrays.copyOf(status, status.length);
				nextStatus[i] = '1';
				
				for (int neighbor : graph[i])
				{
					if (nextStatus[neighbor] == ' ')
					{
						nextStatus[neighbor] = '0';
					}
				}
				
				money = Math.max(money, search(memo, graph, solutions, moneys, nextStatus) + moneys[i-1]);
				
				if (!hasNext)
				{
					hasNext = (moneys[i-1] != 0);
				}
			}
		}
		
		if (!hasNext)
		{
			solutions.add(key);
			System.out.println(new String(status));
		}
		
		memo.put(key, money);
		return money;
	}
	
	

	
	public static void print(int[] result)
	{
		for (int num : result)
		{
			System.out.print(num + ", ");
		}
		
		System.out.println();
	}
	
	
	
    public static void main(String[] args)
    {
    	Q000_A_Contest test = new Q000_A_Contest();
    	
    	/****************************************************/
    	
    	int[] dollars1 = {100, 0, 100, 100, 100, 0, 100};
    	int[][] roads1 = { {3,5}, {2,4}, {5,6}, {4,6}, {1,4} };
    	
    	
    	int[] dollars2 = {75,75,50,75,100};
    	int[][] roads2 = { {3,5}, {2,5}, {2,3}, {4,5}, {1,3}, {2,4} };

    	
    	int[] dollars3 = {6,8,2};
    	int[][] roads3 = { {1,2}, {3,2} };
    	
    	//int[] result1 = demandingMoney(dollars1, roads1);
    	//print(result1);
    	
    	int[] result2 = demandingMoney(dollars2, roads2);
    	print(result2);
    	
    	//int[] result3 = demandingMoney(dollars3, roads3);
    	//print(result1);
    	
    	
    	//print(result2);
    	//print(result3);
    	
    	/***
    	5 6
75 75 50 75 100
3 5
2 5
2 3
4 5
1 3
2 4
    	***/
    	
    }
}
