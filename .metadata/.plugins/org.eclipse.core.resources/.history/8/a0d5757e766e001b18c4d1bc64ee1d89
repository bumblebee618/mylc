import java.util.*;

public class Q000_Minimum_Limit_of_Balls_in_a_Bag 
{
	public int minimumSize(int[] nums, int maxOperations) 
    {
        if (nums == null || nums.length == 0 || maxOperations <= 0)
        {
            return 0;
        }
        
        Queue<Integer> heap = new PriorityQueue<>((a, b) -> b - a);
        int penalty = Integer.MIN_VALUE;
        int part1 = 0, part2 = 0;
        
        for (int num : nums)
        {
            heap.offer(num);
            penalty = Math.max(penalty, num);
        }
        
        for (int operLeft = maxOperations; operLeft > 0; operLeft--)
        {
            int curMax = heap.poll();
            
            System.out.println("curMax = " + curMax + ", ");
            
            if (operLeft == 1)
            {              
                part1 = (curMax % 2 == 1) ? curMax / 2 + 1 : curMax / 2;
            }
            else if (heap.isEmpty())
            {
                part1 = curMax / 3;
            }
            else 
            {
                part1 = heap.peek();
            }
            
            System.out.print("part1 = " + part1 + ", part2 = " + part2 + ", ");
            
            part2 = curMax - part1;
            heap.offer(part1);
            heap.offer(part2);
            penalty = Math.min(penalty, heap.peek());
            
            System.out.println("penalty = " + penalty + ", ");
            System.out.println();
        }
        
        return penalty;
    }
	
	
	
	public static void main(String[] args)
	{
		Q000_Minimum_Limit_of_Balls_in_a_Bag test = new Q000_Minimum_Limit_of_Balls_in_a_Bag();
		int[] nums = {2,4,8,2};
		int maxOperations = 4;
		System.out.println(test.minimumSize(nums, maxOperations));
	}
}
