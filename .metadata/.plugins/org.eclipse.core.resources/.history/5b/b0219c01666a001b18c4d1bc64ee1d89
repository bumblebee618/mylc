import java.util.HashSet;
import java.util.Set;

public class Q000_Target_Sum_In_Matrix 
{
	public boolean findTargetSum(int[][] matrix, int target)
	{
		if (matrix == null || matrix.length == 0 || matrix[0].length == 0 || target <= 0)
		{
			return false;
		}
		
		int row = matrix.length, col = matrix[0].length;
		int[][] dp = new int[row][col];
		Set<Integer> set = new HashSet<>();
		set.add(0);
		
		for (int i = 0; i < row; i++)
		{
			int sum = 0;
			
			for (int j = 0; j < col; j++)
			{
				sum += matrix[i][j];
				dp[i][j] += sum;
				
				if (i > 0)
				{
					dp[i][j] += dp[i-1][j];
				}
				
				if (set.contains(dp[i][j] - target))
				{
					System.out.println(String.format("[%s][%s]: %s", i, j, matrix[i][j]));
					return true;
				}
				else
				{
					set.add(dp[i][j]);
				}
			}
		}
		
		return false;
	}
	
	
	
	
	public static void main(String[] args)
	{
		Q000_Target_Sum_In_Matrix test = new Q000_Target_Sum_In_Matrix();
		
		int[][] matrix = 
		{
			{1, 2, 3, 4, 5},
			{6, 7, 8, 9, 10},
			{11, 12, 13, 14, 15}
		};
		
		int target = 36;
		System.out.println(test.findTargetSum(matrix, target));
	}
}
