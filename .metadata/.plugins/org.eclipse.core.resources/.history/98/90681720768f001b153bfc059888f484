import java.util.*;



public class Q000_A_Contest 
{
	public String evaluate(String s, List<List<String>> knowledge) 
    {
        if (s == null || s.length() == 0 || knowledge == null || knowledge.size() == 0)
        {
            return s;
        }
        
        Map<String, String> map = new HashMap<>();
        
        for (List<String> pair : knowledge)
        {
            map.put(pair.get(0), pair.get(1));
        }
        
        StringBuilder builder = new StringBuilder();
        int front = 0, back = 0, size = s.length();
        
        while (front < size)
        {
            back = front;
            
            while (front < size && s.charAt(front) != '(')
            {
                front++;
            }
            
            builder.append(s.substring(back, front));
            
            if (front < size)
            {
                int end = findEnd(s, front);
                
                System.out.println(front + ", " + end);
                
                String key = s.substring(front+1, end);
                String value = map.getOrDefault(key, "?");
                builder.append(value);
                front = end+1;
            }
        }
        
        return builder.toString();
    }
    
    private int findEnd(String s, int start)
    {
        while (start < s.length() && s.charAt(start) != ')')
        {
            start++;
        }
        
        return start < s.length() ? start : -1;
    }
    
    
    
	
	
	
    public static void main(String[] args)
    {
    	Q000_A_Contest test = new Q000_A_Contest();
    	
    	/****************************************************/
    	String s1 = "(name)is(age)yearsold";
    	List<List<String>> knowledge1 = new LinkedList<>();
    	
    	List<String> list11 = new LinkedList<>();
    	list11.add("name");
    	list11.add("bob");
    	knowledge1.add(list11);
    	
    	List<String> list12 = new LinkedList<>();
    	list12.add("age");
    	list12.add("two");
    	knowledge1.add(list12);
    	
    	System.out.println(test.evaluate(s1, knowledge1));
    	
    	
    	
    	
    	
    }
}
