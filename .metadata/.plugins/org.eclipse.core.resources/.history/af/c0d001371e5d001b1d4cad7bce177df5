import java.util.*;
/********
 * 
 contains: +, -, *, /, (, )
 * 
 * */

public class Q224_Basic_Calculator_III 
{	
	public int calculate(String s) 
    {
        if (s == null)
        {
            return 0;
        }
        
        s = s.trim();
        
        if (s.length() == 0)
        {
            return 0;
        }
        
        Stack<Integer> stack = new Stack<>();
        char prevOper = ' ';
        int num = 0;
        int result = 0;
        
        for (int i = 0; i < s.length(); i++)
        {
            char c = s.charAt(i);
            
            if (c == ' ')
            {
                continue;
            }
            
            if (Character.isDigit(c))
            {
                num = num*10 + (c-'0');
            }
            
            if (c == '(')
            {
                int end = findClosePosition(s, i);
                
                if (end == -1)
                {
                    return 0;
                }
                
                num = calculate(s.substring(i+1, end));
                i = end;
            }
            
            if (!Character.isDigit(c) || i == s.length()-1)
            {
                switch (prevOper)
                {
                    case ' ': stack.push(num); break;
                    case '+': stack.push(num); break;
                    case '-': stack.push(-num); break;
                    case '*':
                        {
                            if (stack.isEmpty())
                            {
                                return 0;
                            }
                            
                            stack.push(stack.pop() * num);
                            break;
                        }
                    case '/':
                        {
                            if (stack.isEmpty())
                            {
                                return 0;
                            }
                            
                            stack.push(stack.pop() / num);
                            break;
                        }
                    default: break;
                }
                
                prevOper = c;
                num = 0;
            }
        }
        
        while (!stack.isEmpty())
        {
            result += stack.pop();
        }
        
        return result;
    }
    
    private int findClosePosition(String s, int start)
    {
        int count = 0;
        
        for (int i = start; i < s.length(); i++)
        {
            char c = s.charAt(i);
            
            if (c == '(')
            {
                count++;
            }
            else if (c == ')')
            {
                count--;
            }
            
            if (count < 0)
            {
                return -1;
            }
            else if (count == 0)
            {
                return i;
            }
        }
        
        return -1;
    }
	
	
	
	
	public static void main(String[] args) {
		Q224_Basic_Calculator_III t = new Q224_Basic_Calculator_III();
		String str = "3 * (3/(1+2))";
		System.out.println(t.Basic_Calculator_III(str));
	}
}
