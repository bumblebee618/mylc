import java.util.Stack;

import javax.swing.InternalFrameFocusTraversalPolicy;

public class Salesforce_Move_Step_To_Sort_Array {
	public int minMoveToSortArray(int[] array) {
		Stack<Integer> stack = new Stack<>();
		
		for (int num : array) {
			while (!stack.isEmpty() && stack.peek() > num) {
				stack.pop();
			}
			
			stack.push(num);
		}
		
		return array.length - stack.size();
	}
	
	
	public int minMoveToSortArray2(int[] array) {
		int stackTop = -1;
		int movedMin = Integer.MAX_VALUE;
		
		for (int num : array) {
			while (stackTop > -1 && array[stackTop] > num) {
				movedMin = Math.min(movedMin, array[stackTop--]);
			}
			
			if (num < movedMin) {
				array[++stackTop] = num;
			} 
		}
		
		for (int num : array) {
			System.out.print(num + ", ");
		}
		
		System.out.println();
		
		return array.length - (stackTop + 1);
	}
	
	
	public static void main(String[] args) {
		Salesforce_Move_Step_To_Sort_Array test = new Salesforce_Move_Step_To_Sort_Array();
		int[] array1 = {5,1,3,2};
		int[] array2 = {5,1,3,6};
		
		System.out.println(test.minMoveToSortArray(array1));
		System.out.println(test.minMoveToSortArray2(array2));
	}
}
